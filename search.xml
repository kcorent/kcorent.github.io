<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>水题日记「置顶」</title>
    <url>/2022/10/04/2-%E6%B0%B4%E9%A2%98%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<p>开个坑记录算法学习，balabala... <span id="more"></span></p>
<h3 id="资料整理">资料整理</h3>
<ul>
<li><a href="https://oi-wiki.org/" target="_blank">OI-WiKi</a>
讲得很好<br>
</li>
<li><a href="https://ac.nowcoder.com/acm/contest/vip-index" target="_blank">牛客竞赛网</a>
我这水平还是不要碰瓷CF级别的比赛了吧<br>
</li>
<li><a href="https://loj.ac/" target="_blank">LiberOJ</a> 训练平台<br>
</li>
<li><a href="https://loj.ac/d/588" target="_blank">一本通提高题单</a>
有能力再来打吧<br>
</li>
<li><a href="https://space.bilibili.com/386629955" target="_blank">数学知识</a>
早年看过的一个很好的Up<br>
</li>
<li><a href="https://cubeskills.com/" target="_blank">CubeSkills</a>
菲神创办的网站，可以润</li>
</ul>
<h3 id="section">2022.10.2</h3>
<p>准备刷<a href="https://leetcode.cn/study-plan/lcof/?progress=sglt8nc" target="_blank">剑指offer</a>的题目，按力扣上的计划来<br>
看看能坚持刷完吗、</p>
<h3 id="section-1">2022.9.20</h3>
<p>其实想了很久，算法这条路已经走不了了、、<br>
这个坑就埋了吧 还有很多更有意义的事情要去做 留着作纪念吧、、</p>
<h3 id="section-2">2022.8.30</h3>
<p>run不了了，要期末考试！</p>
<h3 id="section-3">2022.8.27</h3>
<p>可以开始run算法了，从头开始吧，毕竟网课是真的无趣。</p>
<p>LiberOj用于主训练平台，竞赛先用着牛客OJ，等能力提升可以试着润润CF，但是可能等不到那一天了。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>摆烂小日记</title>
    <url>/2022/10/04/4-%E6%91%86%E7%83%82%E5%B0%8F%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<p>emmm，记录一下自己混了多久，也找个地方存一存自己的日常<br>
<span id="more"></span></p>
<h3 id="section">2022.10.2</h3>
<p>今天干了件大事，现在是2:25分，根本不敢看手机，也睡不着，谁懂那种感觉、</p>
<p>期待一下明天吧 那就肝一肝极品飞车！</p>
<p>刚刚刷了刷剧情，总算肝到了10级，买了一架奥迪，改了改贴纸，还不错，我是真爱粉呢、</p>
<p>目前来看，心里一瞬间有一百万个可能，无论哪一种，都可能是差强人意，哎，我是不是做错了</p>
<h3 id="section-1">2022.9.21</h3>
<p>算了算寄点和综测，发现是真的划水了，不过问题不大，没有意义的东西、、<br>
有一堆划水竞赛经历对我来说已经满足了<br>
下一步就是上岸计划了，，<br>
对于专业课程来说，现在就是60分万岁了</p>
<h3 id="section-2">2022.9.20</h3>
<p>很久没记录了，因为每天都在摆烂，最近开学一拖又拖，在家也无所事事起来，停了六天的课，打了六天的游戏，不仅游戏没打好，也没学好东西。。
不是很想记录，对于LOL来说，不知道是什么促使我去上分，然后又被LJ'队友给气死。<br>
还是早点回学校吧，在家待不下去了，然后去学校依旧的想念家里、、<br>
恶性循环了属于是 下面附上一张LOL战绩图，气死ing<br>
<img data-src="02.png"></p>
<h3 id="section-3">2022.8.30</h3>
<p>今天上网课，是一门专业课，毫无意思<br>
跟nxq学长交流了一下，这个专业是真的痛苦，得过且过吧，，，<br>
然后我去问了新辅导员转专业的事情，概率不大，但还是帮我去问问</p>
<p>这个辅导员人真的很好！</p>
<p>希望别歪了，转过去跟不上可以选择降级嘛。。<br>
这样又能打一年算法，开森。</p>
<p>19点30分补充：没错，确实歪了，转不了专业，我撕心裂肺，谁能懂。</p>
<h3 id="section-4">2002.8.29</h3>
<p>网课第一天，不知道听了个啥，反正对机械专业课不感冒，还不如打打金铲铲，打打算法呢。。。<br>
无趣</p>
<p>突然感觉自己文笔不如当年了，想写一篇青春礼记都写不出了。</p>
<h3 id="section-5">2022.8.23</h3>
<p>现在是2:50分，再熬夜就是要咕了..
目前的计划是12:00前睡觉吧，先把开学考试给复习好再说吧，这是个硬茬。。</p>
<p>我算是意识到了，身体才是最重要的</p>
<h3 id="section-6">2022.8.19</h3>
<p>喜报，科三过了！<br>
早上5点40起床，8点到的考场，今天考的人贼多...<br>
硬是等到了下午4点才考，心好累，不过结局是好的<br>
上次咕了一把，心里很不是滋味。。</p>
<p>喜报，开学延期了！ 又可以划水了呢，先不复习期末考试了吧</p>
<p>总的来说，今天真是芜湖</p>
<h3 id="section-7">2022.8.16</h3>
<p>来这边练车，17号和18号能练，约上了19号，~千万别再挂了</p>
<p>目前开学时间未知，我依旧摆烂，4门课一门没看，开学估计要咕了..</p>
<p>希望别提前开学，lyj说可能要提前，谁说得准呢，万一我真这么倒霉</p>
<h3 id="section-8">2022.8.14</h3>
<p>今天sr给我推荐了一部电视剧——民国奇探，是一部悬疑+喜剧风格的电视剧，简直深得我心，有点唐人街探案的风格，破案剧情紧凑不拖泥带水，巴适得很。</p>
<p>晚上sr给我看了她家夜晚来的小猫咪，很可爱，啥时候我也能rua猫咪啊，特别是那种肥猪橘猫~</p>
<p>看剧ing</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>日常</tag>
      </tags>
  </entry>
  <entry>
    <title>意林</title>
    <url>/2022/10/04/7-%E6%84%8F%E6%9E%97/</url>
    <content><![CDATA[<p>开个坑用来摘录意林、读者等优美文章</p>
<span id="more"></span>
<h3 id="被疫情偷走的这几年">被疫情“偷走”的这几年</h3>
<p>疫情的到来，令这两年上学的大学生仿佛赶上了列车，但好像列车没有按原有的速度前行，窗外驶过的风景似乎和想象中有所出入。</p>
<p>小丁几乎是在封校里度过大一，大二读了半学期才解封，回归“正常”的上学状态。</p>
<p>小丁坦言，一开始真正和同班同学聚在一个教室上课时，会陷入对不上号、脸盲的状态，班里有一大半叫不上名字的同学。当她好不容易记住一部分同学时，只要对方换了发型就约等于回到原点，认不出来。除非个人风格特别强烈。</p>
<p>不过在另一个层面，这段“特殊”的经历使得她和舍友的关系几乎处于“朝夕相处”的状态。于是乎，哪怕隔了几条马路都可以辨识出哪个是舍友。</p>
<p>关于这趟大学旅程，除了有点没有实感，“莫名其妙大一就过去了，一眨眼大二也过一半了”，还有一件比较失落的事情是出行不方便。</p>
<p>小丁所设想的大学旅程，原本是想趁这个人生黄金阶段，有时间有精力可以到处旅游，出省甚至出国见见世面，却扑了空。</p>
<p>“本来打算今年去武汉看樱花，后来听到在武汉的朋友透露说要隔离15天，便打消了这个念头。”</p>
<p>小昌是2021年毕业的学生，问及疫情这两年对他的大学生活有啥影响时，“变得很宅吧”，这是他脱口而出的答案。</p>
<p>因为以前经历过和大伙在一个课室上“实体”课，周末还可以外出参加活动，看看演唱会、旅游等，所以落差蛮大。</p>
<p>“原本的活动空间像是被突然压缩了。”</p>
<p>小昌先是在家上了一段时间的网课，过后返校回宿舍继续上网課，只能在食堂吃饭，每天的生活，两点一线。</p>
<p>小昌苦中作乐说：“食堂会给餐桌加上那种隔离起来的板子，很像网吧，社恐应该蛮喜欢的。”</p>
<p>回忆起拍摄毕业照的那天，小昌用了“冷清”这个词语来概括。
因为疫情反反复复，封校严格，外校人员进不来，小昌所在的学校也不例外，这届毕业照仅在内部完成，没有亲朋好友的参与。</p>
<p>即使恰逢100周年校庆，也没搞什么活动，原本准备搭建舞台表演的计划也取消了，只是给每个学生发了一枚纪念徽章，以及提供了一元的校庆餐，便结束了这场百年庆。</p>
<p>小昌和女朋友是通过游戏“奔现”在一起的，封闭的空间加上异地恋，似乎会使思念更加浓稠，这段时间处于热恋期小昌也遇到一些“挑战”。</p>
<p>“每次女朋友去高铁站接我时，第一时间不是牵手拥抱，而是掏出小喷瓶装的酒精喷我的手，给我消毒。”</p>
<p>疫情刚暴发时，小王正处于大三，在家拥有一个学期的网课体验，在这段时间里，也久违体验到家乡的初春和早夏，去河谷花海里踏青。</p>
<p>“我的爸妈没有那么想挣钱了，我妈说这是自2008年来头一次感受到节奏变慢。”</p>
<p>小的时候，我会一直很想有个大大的台风天，然后不用上学。眼见，迎来了一个长时间的“台风天”。或许人类开始变得有点熟悉如何和它相处，但我还是希望往日那个没什么不同、没有疫情的普通日常快点到来。</p>
<pre><code>                                                        取自2022意林第五期(侵删)   </code></pre>
<hr>
]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>意林</tag>
      </tags>
  </entry>
  <entry>
    <title>剑指offer习题</title>
    <url>/2022/10/04/8-%E5%89%91%E6%8C%87offer/</url>
    <content><![CDATA[<p>存一下剑指offer刷题进度 <span id="more"></span></p>
<h3 id="section">2022.10.6</h3>
<p><a href="https://leetcode.cn/problems/zuo-xuan-zhuan-zi-fu-chuan-lcof/" target="_blank">左旋转字符串</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">reverseLeftWords</span><span class="params">(string s, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        string s1 = s.<span class="built_in">substr</span>(<span class="number">0</span>,n) ;</span><br><span class="line">        s.<span class="built_in">erase</span>(<span class="number">0</span>,n) ;</span><br><span class="line">        <span class="keyword">return</span> s + s1 ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><a href="https://leetcode.cn/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/" target="_blank">数组中重复的数字</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 哈希表做法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">findRepeatNumber</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; mp ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; nums.<span class="built_in">size</span>() ; i++)&#123;</span><br><span class="line">            mp[nums[i]] ++ ;</span><br><span class="line">            <span class="keyword">if</span>(mp[nums[i]] &gt; <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> nums[i] ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 简易做法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">findRepeatNumber</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> i = <span class="number">0</span> ; </span><br><span class="line">        <span class="keyword">while</span>( i &lt; nums.<span class="built_in">size</span>())&#123;</span><br><span class="line">            <span class="keyword">if</span>( nums[i] == i )&#123;</span><br><span class="line">                i++ ;</span><br><span class="line">                <span class="keyword">continue</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>( nums[nums[i]] == nums[i])&#123;</span><br><span class="line">                <span class="keyword">return</span> nums[i] ;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">swap</span>( nums[nums[i]] , nums[i]) ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><a href="https://leetcode.cn/problems/zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof/" target="_blank">在排序数组中查找数字</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 二分做法才是正解</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> left = <span class="number">0</span> ; </span><br><span class="line">        <span class="type">int</span> mid ; </span><br><span class="line">        <span class="type">int</span> count = <span class="number">0</span> ; </span><br><span class="line">        <span class="type">int</span> right = nums.<span class="built_in">size</span>() - <span class="number">1</span> ; </span><br><span class="line">        <span class="keyword">while</span> ( left &lt; right )&#123;</span><br><span class="line">            mid = (left + right) / <span class="number">2</span> ;</span><br><span class="line">            <span class="keyword">if</span>( nums[mid] &gt;= target)&#123;</span><br><span class="line">                right = mid ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> ( nums[mid] &lt; target)&#123;</span><br><span class="line">                left = mid + <span class="number">1</span> ; </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> ( left &lt; nums.<span class="built_in">size</span>() &amp;&amp; nums[left++] == target)&#123;</span><br><span class="line">            count ++ ; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><a href="https://leetcode.cn/problems/que-shi-de-shu-zi-lcof/" target="_blank">缺失的数字</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 依旧是二分</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">missingNumber</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> l = <span class="number">0</span> ; </span><br><span class="line">        <span class="type">int</span> r = nums.<span class="built_in">size</span>() - <span class="number">1</span> ;</span><br><span class="line">        <span class="keyword">while</span>(l &lt;= r )&#123;</span><br><span class="line">            <span class="type">int</span> mid = ( l + r ) / <span class="number">2</span> ;</span><br><span class="line">            <span class="keyword">if</span>( nums[mid] == mid )&#123;</span><br><span class="line">                l = mid + <span class="number">1</span> ; </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                r = mid - <span class="number">1</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="section-1">2022.10.5</h3>
<p><a href="https://leetcode.cn/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof/" target="_blank">从尾到头打印链表</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">reversePrint</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//常规做法</span></span><br><span class="line">        ListNode* node = head ;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt;ans ;  </span><br><span class="line">        <span class="type">int</span> nums[<span class="number">10005</span>] ;</span><br><span class="line">        <span class="type">int</span> k = <span class="number">0</span> ; </span><br><span class="line">        <span class="keyword">while</span>(node != <span class="literal">NULL</span>)&#123;</span><br><span class="line">            nums[k++] = node-&gt;val ;</span><br><span class="line">            node = node-&gt;next ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = k - <span class="number">1</span> ; i &gt;= <span class="number">0</span> ; i-- )&#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(nums[i]) ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans ;</span><br><span class="line">        <span class="comment">// 下面是栈做法</span></span><br><span class="line">        stack&lt;<span class="type">int</span>&gt; st ; </span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; v ;</span><br><span class="line">        ListNode* node = head ;</span><br><span class="line">        <span class="keyword">while</span>( node != <span class="literal">NULL</span> )&#123;</span><br><span class="line">            st.<span class="built_in">push</span>(node-&gt;val) ;</span><br><span class="line">            node = node-&gt;next ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>( !st.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">            v.<span class="built_in">push_back</span>(st.<span class="built_in">top</span>());</span><br><span class="line">            st.<span class="built_in">pop</span>() ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><a href="https://leetcode.cn/problems/fan-zhuan-lian-biao-lcof/" target="_blank">反转链表</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseList</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        ListNode *cur = head , *pre = <span class="literal">NULL</span> ;</span><br><span class="line">        <span class="keyword">while</span>( cur != <span class="literal">NULL</span> )&#123;</span><br><span class="line">            ListNode *temp = cur-&gt;next ;</span><br><span class="line">            cur-&gt;next = pre ;</span><br><span class="line">            pre = cur ;</span><br><span class="line">            cur = temp ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pre ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><a href="https://leetcode.cn/problems/ti-huan-kong-ge-lcof/" target="_blank">替换空格</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">replaceSpace</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 直接库函数吧</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; s.<span class="built_in">length</span>() ; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>( s[i] == <span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">                s.<span class="built_in">replace</span>(i , <span class="number">1</span> , <span class="string">&quot;%20&quot;</span>) ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s ; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="section-2">2022.10.4</h3>
<p><a href="https://leetcode.cn/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/" target="_blank">用两个栈实现队列</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CQueue</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    stack&lt;<span class="type">int</span>&gt;st1 , st2 ;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">op</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(!st1.<span class="built_in">empty</span>())&#123;</span><br><span class="line">            st2.<span class="built_in">push</span>(st1.<span class="built_in">top</span>());</span><br><span class="line">            st1.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">CQueue</span>() &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">appendTail</span><span class="params">(<span class="type">int</span> value)</span> </span>&#123;</span><br><span class="line">        st1.<span class="built_in">push</span>(value);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">deleteHead</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(st2.<span class="built_in">empty</span>())&#123;</span><br><span class="line">            <span class="keyword">if</span>(st1.<span class="built_in">empty</span>())&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">-1</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">op</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> value = st2.<span class="built_in">top</span>();</span><br><span class="line">        st2.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">return</span> value ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><a href="https://leetcode.cn/problems/bao-han-minhan-shu-de-zhan-lcof/" target="_blank">包含min函数的栈</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MinStack</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/** initialize your data structure here. */</span></span><br><span class="line">    stack&lt;<span class="type">int</span>&gt; st ;</span><br><span class="line">    stack&lt;<span class="type">int</span>&gt; st1 ;</span><br><span class="line">    <span class="type">int</span> t = INT_MAX ;</span><br><span class="line">    <span class="built_in">MinStack</span>() &#123;</span><br><span class="line">        st1.<span class="built_in">push</span>(t) ;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">push</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        st.<span class="built_in">push</span>(x);</span><br><span class="line">        <span class="keyword">if</span>( x &lt;= st1.<span class="built_in">top</span>())&#123;</span><br><span class="line">            st1.<span class="built_in">push</span>(x);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            st1.<span class="built_in">push</span>(st1.<span class="built_in">top</span>());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        st.<span class="built_in">pop</span>(); </span><br><span class="line">        st1.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">top</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> value = st.<span class="built_in">top</span>();</span><br><span class="line">        <span class="keyword">return</span> value ;    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">min</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> st1.<span class="built_in">top</span>() ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>剑指offer</tag>
      </tags>
  </entry>
  <entry>
    <title>git踩坑记</title>
    <url>/2022/10/04/6-%E8%B8%A9%E5%9D%91%E8%AE%B0/</url>
    <content><![CDATA[<p>发现个好玩的事。<br>
<span id="more"></span></p>
<p>起因是我在Blog上传了一份算法PDF，想存在资料里面，后来就发现了上传的文件不能超过100MB，然后就开始了各种百度解决这个问题，发现在本地删除掉大文件，git文件里面还是会有缓存，所以必须用指令删除掉缓存才可以，于是我就按照网上做法，弄到了半夜3点，未果、、</p>
<p>于是果断删库跑路，因为这是blog，备份后重新创个库连接就行了、</p>
<p>以后再也不上传大文件了，尽量都是直接找网站教程、资料吧<br>
至于解决方案，还得以后再深究吧，毕竟工作每天都要与github打交道，还是一个问题。</p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>所为何求</title>
    <url>/2022/10/04/5-%E6%89%80%E4%B8%BA%E4%BD%95%E6%B1%82/</url>
    <content><![CDATA[<p>我到底是害怕对线剑姬，还是害怕面对那个满是破绽的自己。</p>
<span id="more"></span>
<p>我时常会想，我读这个书，读这个专业会有什么意思。无非是为了工作，赚钱？<br>
具体来说，我从初三开始才去“自主读书”，说白了就是认识读书，去主动地迎合读书。到了高中，被灌输着太多思想，被老师一味地牵着走。很多人都教你怎么去读书，怎么高考，却没有教你怎么选择专业。</p>
<p>在我看来，无非是兴趣偏差问题，兴趣培养应该是老师引导和发现，而自己去付诸行动，久而久之自己就会发现适合与不适合，想与不想。就比如SHY在高中时期就选择打OI，大学选专业也自然而然明白自己的选择，反观自己，视野狭窄罢了，像一头晕头转向的鱼，到处碰壁，碰上了不喜欢的东西，但是也要将就与其缠绵。</p>
<p>若是我早早地接触OI，接触Program
Coding或许就不会如此，如今让我懊恼的，是高中满是破绽的自己、眼界狭隘的自己以及运气不好的自己，像抽卡一般，莫名抽到了这个学校和专业。</p>
<p>今临毕业，力不从心，不知所言。</p>
<p>补充一句，LJ机械狗都不读。。<br>
造化弄人罢了，命里该有此劫吧。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/10/04/1-Hello%20World/</url>
    <content><![CDATA[<p>emmmm,怎么说呢，看到了SYH的Blog，发现了一个简洁且NB的Hexo主题，于是在两天的时间里，完成一波配置。
<del>不是一般的辛苦</del><br>
<span id="more"></span></p>
<p>辗转了很久，炸掉了一波又一波，总算完成基本配置，这波配置主要是完成：</p>
<ul>
<li>代码高亮</li>
</ul>
<p>我发现我是真的哈皮，用next7.8.0的时候只有五种代码高亮主题，于是光荣地把next7.8给炸了，去安装了8.12.3版本，选了很久的代码高亮主题，但是字体又很小，于是请教了一波SYH，然后发现可能hexo版本过低了，然后又把hexo给炸了，安装了hexo
6.0<br>
我是铸币，看了官方文档一步一步配置，发现了能手动配置字体大小，这样一来，代码高亮和字体就能完美展示了</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std ; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;Hello World !&quot;</span> &lt;&lt; endl ;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>QQ音乐</li>
</ul>
<p>看了挺久别人的Blog，找到了其中的奥妙。</p>
<p>其实最开始用的是网易云音乐的插件，奈何网易云实在不忍直视(有点小丑陋),于是花了大量的精力从Kugou和QQ音乐做抉择，最后还是选择使用QQ音乐，看了成效，确实简单又好看！</p>
<p>但是手机端上面会自动播放音乐，这就有点HA了。</p>
<ul>
<li>字体配置</li>
</ul>
<p>配了好久，翻阅无数Blog，最终是把字体给配置好了，然后就是想着怎么在手机端上，让字体不会缩小呢！</p>
<ul>
<li>数学公式</li>
</ul>
<p>语法有点复杂，多用就熟悉了。还是得查<a href="https://www.zybuluo.com/codeep/note/163962" target="_blank">Mathjax官方文档</a></p>
<p><span class="math display">\[\sum_{i=0}^n i^2 =
\frac{(n^2+n)(2n+1)}{6}\]</span></p>
<p>还是感谢hexo，还能让我记录点东西，也还算不错。</p>
<p>下了两天的雨，出不去，配Blog中玩了玩CSS，jio得是真滴好玩，但是对前端没有兴趣的我还是得过且过吧，毕竟要做用轮子的人而不是<del>造轮子</del></p>
<p>新开了个库名 : xhwsr ，用了她的名字</p>
<h2 id="upd-august-132022">upd: August 13,2022</h2>
<ul>
<li>Next 7.8.0 --&gt; 8.12.3<br>
</li>
<li>hexo 5.4.3 --&gt; 6.3.2</li>
<li>新建了一个仓库"xhwsr"作为Git mian</li>
</ul>
<h2 id="upd-august-142022">upd: August 14,2022</h2>
<ul>
<li>MathJax插件--pendco</li>
<li>字体CSS样式配置</li>
<li>Back to top 按钮</li>
</ul>
<h2 id="upd-august-312022">upd: August 31,2022</h2>
<ul>
<li>去除自动播放音乐</li>
<li>添加转发功能</li>
</ul>
<h2 id="upd-september-202022">upd: September 20,2022</h2>
<ul>
<li>添加图片插件</li>
<li>更改了代码高亮样式</li>
</ul>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>杂项 &lt;script type=&quot;text/javascript&quot; src=&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;&lt;/script&gt;</tag>
      </tags>
  </entry>
</search>
